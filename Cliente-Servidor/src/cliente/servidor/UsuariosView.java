/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente.servidor;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import utils.Utils;

/**
 *
 * @author isaac
 */
public class UsuariosView extends javax.swing.JFrame {

    /**
     * Creates new form UsuariosView
     */
    private String nombre = "";
    private String id = "";
    private String buscarUsuario = "";
    private String password = "";
    private String username = "";
    private String perfil = "";
    private boolean nombreIsValid = false;
    private boolean passwordIsValid = false;
    private boolean usernameIsValid = false;
    private Utils utils = new Utils();
    public Connection connection;
    Conexion conexion;
    private DatagramSocket socket;

    public UsuariosView() {
        try {
            initComponents();
            this.setLocationRelativeTo(null);
            setEstado(false);
            permitirAccion();
            conexion = new Conexion();
            socket = new DatagramSocket();
            idInput.setEnabled(false);

        } catch (SocketException ex) {
            Logger.getLogger(UsuariosView.class.getName()).log(Level.SEVERE, null, ex);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buscarInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        usernameInput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        idInput = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        nombreInput = new javax.swing.JTextField();
        buscarButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        passwordInput = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        perfilInput = new javax.swing.JComboBox<>();
        cancelarButton = new javax.swing.JButton();
        nuevoButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buscarInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarInputActionPerformed(evt);
            }
        });
        getContentPane().add(buscarInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 270, 40));

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nombre de usuario");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, -1));

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Username");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        usernameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameInputKeyReleased(evt);
            }
        });
        getContentPane().add(usernameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 270, 40));

        jLabel6.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        idInput.setEditable(false);
        getContentPane().add(idInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 110, 40));

        jLabel7.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Usuario");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        nombreInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreInputKeyReleased(evt);
            }
        });
        getContentPane().add(nombreInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 270, 40));

        buscarButton.setFont(new java.awt.Font("Bahnschrift", 1, 11)); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(buscarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 40, 130, 40));

        jLabel8.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nombre");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel9.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Password");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        passwordInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordInputKeyReleased(evt);
            }
        });
        getContentPane().add(passwordInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 270, 40));

        jLabel10.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Perfil");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        perfilInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "admin", "supervisor", "cajero" }));
        perfilInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perfilInputActionPerformed(evt);
            }
        });
        perfilInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                perfilInputKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                perfilInputKeyReleased(evt);
            }
        });
        getContentPane().add(perfilInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 270, 40));

        cancelarButton.setFont(new java.awt.Font("Bahnschrift", 1, 11)); // NOI18N
        cancelarButton.setText("Cancelar");
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 400, 110, 40));

        nuevoButton.setFont(new java.awt.Font("Bahnschrift", 1, 11)); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });
        getContentPane().add(nuevoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 110, 40));

        guardarButton.setFont(new java.awt.Font("Bahnschrift", 1, 11)); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(guardarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 110, 40));

        editarButton.setFont(new java.awt.Font("Bahnschrift", 1, 11)); // NOI18N
        editarButton.setText("Editar");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 400, 110, 40));

        eliminarButton.setFont(new java.awt.Font("Bahnschrift", 1, 11)); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(eliminarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, 110, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/whiteLogo.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, 170, 160));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/bg-dblue.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setEstado(Boolean state) {
        editarButton.setEnabled(state);
        eliminarButton.setEnabled(state);
        nombreInput.setEnabled(state);
        usernameInput.setEnabled(state);
        passwordInput.setEnabled(state);
        perfilInput.setEnabled(state);
        limpiarTexto();
    }

    private boolean getEstados() {
        return nombreIsValid && passwordIsValid && usernameIsValid;
    }

    private void permitirAccion() {
        if (!idInput.getText().equals("")) {
            guardarButton.setEnabled(false);
            return;
        }
        boolean permitir = getEstados();
        guardarButton.setEnabled(permitir);
    }
    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        // TODO add your handling code here:
        buscar(buscarInput.getText());

    }//GEN-LAST:event_buscarButtonActionPerformed

    private void perfilInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perfilInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_perfilInputActionPerformed

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        // TODO add your handling code here:
        limpiarTexto();
        permitirAccion();
        setEstado(false);
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed
        // TODO add your handling code here:
        setEstado(true);
        if (idInput.getText().equals("")) {
            eliminarButton.setEnabled(false);
            editarButton.setEnabled(false);
        }
    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        // TODO add your handling code here:
        
        try {
            nombre = nombreInput.getText();
            username = usernameInput.getText();
            password = passwordInput.getText();
            perfil = perfilInput.getSelectedItem().toString();

            String mensaje = "usuario" + " " + "insertar" + " " + nombre + " " + username + " " + perfil + " " + password;
            byte datos[] = mensaje.getBytes();
            JOptionPane.showMessageDialog(null, "Guardar usuario...", "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
            DatagramPacket enviarPaquete = new DatagramPacket(datos,
                    datos.length, InetAddress.getLocalHost(), 5000);
            socket.send(enviarPaquete);//enviar paquete
        } catch (IOException exceptionES) {
            exceptionES.printStackTrace();
        }
        try {
            socket = new DatagramSocket();
            buscar(nombreInput.getText());
            guardarButton.setEnabled(false);
        } catch (SocketException excepcionSocket) {
            excepcionSocket.printStackTrace();
            System.exit(1);
        }
    }//GEN-LAST:event_guardarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        // TODO add your handling code here:
        if (idInput.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "No se encontró el usuario a editar",
                    "Error :(", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            nombre = nombreInput.getText();
            username = usernameInput.getText();
            password = passwordInput.getText();
            perfil = perfilInput.getItemAt(perfilInput.getSelectedIndex());
            System.out.println("perfil" + perfil);

            id = idInput.getText();

            String mensaje = "usuario" + " " + "editar" + " " + nombre + " " + username + " " + password + " " + perfil + " " + id;
            byte datos[] = mensaje.getBytes();
            JOptionPane.showMessageDialog(null, "Editar usuario...", "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
            DatagramPacket enviarPaquete = new DatagramPacket(datos,
                    datos.length, InetAddress.getLocalHost(), 5000);
            socket.send(enviarPaquete);//enviar paquete
        } catch (IOException exceptionES) {
            exceptionES.printStackTrace();
        }
        try {
            socket = new DatagramSocket();
        } catch (SocketException excepcionSocket) {
            excepcionSocket.printStackTrace();
            System.exit(1);
        }
    }//GEN-LAST:event_editarButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        // TODO add your handling code here:
        if (idInput.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "No se encontró el usuario a eliminar",
                    "Error :(", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            id = idInput.getText();
            String mensaje = "usuario" + " " + "eliminar" + " " + id;
            byte datos[] = mensaje.getBytes();
//crear enviarPaquete
            JOptionPane.showMessageDialog(null, "Eliminar usuario...", "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
            DatagramPacket enviarPaquete = new DatagramPacket(datos,
                    datos.length, InetAddress.getLocalHost(), 5000);
            socket.send(enviarPaquete);//enviar paquete
            limpiarTexto();
        } catch (IOException exceptionES) {
            exceptionES.printStackTrace();
        }
        try {
            socket = new DatagramSocket();
        } //atrapar los problemas que puedan ocurrir al crear objeto DatagramSocket
        catch (SocketException excepcionSocket) {
            excepcionSocket.printStackTrace();
            System.exit(1);
        }
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void nombreInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreInputKeyReleased
        // TODO add your handling code here:
        String aux = nombreInput.getText();
        nombreIsValid = utils.isStringOnlyAlphabet(aux);
        permitirAccion();
    }//GEN-LAST:event_nombreInputKeyReleased

    private void usernameInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameInputKeyReleased
        // TODO add your handling code here:
        String aux = usernameInput.getText();
        usernameIsValid = !aux.equals("");
        permitirAccion();
    }//GEN-LAST:event_usernameInputKeyReleased

    private void passwordInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordInputKeyReleased
        // TODO add your handling code here:
        String aux = passwordInput.getText();
        passwordIsValid = !aux.equals("");
        permitirAccion();
    }//GEN-LAST:event_passwordInputKeyReleased

    private void perfilInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_perfilInputKeyReleased

    }//GEN-LAST:event_perfilInputKeyReleased

    private void perfilInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_perfilInputKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_perfilInputKeyPressed

    private void buscarInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarInputActionPerformed

    private void esperarPaquetes() {
        try {
//establecer el paquete
            byte datos[] = new byte[100];

            DatagramPacket recibirPaquete = new DatagramPacket(
                    datos, datos.length);
            socket.receive(recibirPaquete);//esperar un paquete
            if (recibirPaquete.getLength() == 0) {
                limpiarTexto();
                this.dispose();
            }
            String cad = (new String(recibirPaquete.getData(),
                    0, recibirPaquete.getLength()));
            if (cad.equals("No hay resultados")) {
                JOptionPane.showMessageDialog(null, "No hay resultados.");
                limpiarTexto();
                return;
            }
            setEstado(true);
            guardarButton.setEnabled(false);
            String[] variables;
            variables = cad.split(" ");
            idInput.setText(variables[0]);
            nombreInput.setText(variables[1]);
            usernameInput.setText(variables[2]);
            perfilInput.setSelectedItem(variables[3]);
            passwordInput.setText(variables[4]);

        } catch (IOException excepcion) {
            excepcion.printStackTrace();
        }

    }//fin

    public void limpiarTexto() {
        nombreInput.setText("");
        usernameInput.setText("");
        passwordInput.setText("");
        perfilInput.setSelectedIndex(0);
        buscarInput.setText("");
        idInput.setText("");
    }

    public void buscar(String busqueda) {
        try {
//obtener mensaje del campo de texto y convertirlo en arreglo byte
            String mensaje = "usuario" + " " + "buscar" + " " + busqueda;
            byte datos[] = mensaje.getBytes();
            DatagramPacket enviarPaquete = new DatagramPacket(datos,
                    datos.length, InetAddress.getLocalHost(), 5000);
            socket.send(enviarPaquete);//enviar paquete
        } catch (IOException exceptionES) {
            exceptionES.printStackTrace();
        }
        try {
            esperarPaquetes();
            socket = new DatagramSocket();
        } catch (SocketException excepcionSocket) {
            excepcionSocket.printStackTrace();
            System.exit(1);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuariosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuariosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuariosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuariosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsuariosView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField buscarInput;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JButton guardarButton;
    private javax.swing.JTextField idInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nombreInput;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JTextField passwordInput;
    private javax.swing.JComboBox<String> perfilInput;
    private javax.swing.JTextField usernameInput;
    // End of variables declaration//GEN-END:variables
}
